; 0.6 (4)

(define (sdr a l)
  (cond ((null? l) #f)
        ((= a (car l)) #t)
        (else (sdr a (cdr l)))
        )
 )

(define (component vr Gr)
    (define (reachable l visited)
    (define (nbs v G)
      (cond ((null? G) `())
            ((and (= (caar G) v) (not(sdr (caar G) visited))) (append (list (cdar G)) (nbs v (cdr G))))
            ((and (= (cdar G) v) (not(sdr (caar G) visited))) (append (list (caar G)) (nbs v (cdr G))))
            (else (nbs v (cdr G)))
       )
      )
     (reachable (append (cdr l) (nbs (car l) Gr)) (append visited (list (car l))))
  )
    (reachable (list vr) `())
  )
